{"ast":null,"code":"var _jsxFileName = \"/home/2024spring_41class_team7/Frontend/src/components/Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonColor = '#1A4D2E';\nconst titleColor = '#4F6F52';\nconst layerColor1 = '#F5EFE6';\nconst layerColor2 = '#E8DFCA';\nconst backColor = '#FFFFFF';\nconst AdminContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 500px;\n  background-color: ${layerColor1};\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n`;\n_c = AdminContainer;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  padding: 30px;\n`;\n_c2 = Form;\nconst Input = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  margin-bottom: 20px;\n  font-size: 16px;\n`;\n_c3 = Input;\nconst Button = styled.button`\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${buttonColor};\n  color: white;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c4 = Button;\nconst H1 = styled.h1`\n  margin-top: 30px;\n  color: ${titleColor};\n`;\n_c5 = H1;\nfunction Admin() {\n  _s();\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you would handle the authentication logic\n    if (password === 'ss') {\n      alert('Login successful!');\n      navigate('/adminpage');\n      // Redirect or show admin content\n    } else {\n      alert('Incorrect password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContainer, {\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      children: \"Administrator Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter admin password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"4HFxR80caG41yat8KJRT4Mye14U=\", false, function () {\n  return [useNavigate];\n});\n_c6 = Admin;\nexport default Admin;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AdminContainer\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"H1\");\n$RefreshReg$(_c6, \"Admin\");","map":{"version":3,"names":["React","useState","styled","useNavigate","jsxDEV","_jsxDEV","buttonColor","titleColor","layerColor1","layerColor2","backColor","AdminContainer","div","_c","Form","form","_c2","Input","input","_c3","Button","button","_c4","H1","h1","_c5","Admin","_s","password","setPassword","navigate","handleSubmit","e","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c6","$RefreshReg$"],"sources":["/home/2024spring_41class_team7/Frontend/src/components/Admin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\n\nconst buttonColor = '#1A4D2E';\nconst titleColor = '#4F6F52';\nconst layerColor1 = '#F5EFE6';\nconst layerColor2 = '#E8DFCA';\nconst backColor = '#FFFFFF';\n\n\nconst AdminContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 500px;\n  background-color: ${layerColor1};\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  padding: 30px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  margin-bottom: 20px;\n  font-size: 16px;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${buttonColor};\n  color: white;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst H1 = styled.h1`\n  margin-top: 30px;\n  color: ${titleColor};\n`;\n\nfunction Admin() {\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Here you would handle the authentication logic\n    if (password === 'ss') {\n      alert('Login successful!');\n      navigate('/adminpage');\n      // Redirect or show admin content\n    } else {\n      alert('Incorrect password.');\n    }\n  };\n\n  return (\n    <AdminContainer>\n      <H1>Administrator Login</H1>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Enter admin password\"\n        />\n        <Button type=\"submit\">Login</Button>\n      </Form>\n    </AdminContainer>\n  );\n}\n\nexport default Admin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}